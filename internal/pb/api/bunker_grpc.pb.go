// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: api/bunker.proto

package bunker_api

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BunkerGameService_RevealPlayerCharacteristic_FullMethodName = "/BunkerGameService/RevealPlayerCharacteristic"
)

// BunkerGameServiceClient is the client API for BunkerGameService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BunkerGameServiceClient interface {
	RevealPlayerCharacteristic(ctx context.Context, in *RevealPlayerCharacteristicRequest, opts ...grpc.CallOption) (*RevealPlayerCharacteristicResponse, error)
}

type bunkerGameServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBunkerGameServiceClient(cc grpc.ClientConnInterface) BunkerGameServiceClient {
	return &bunkerGameServiceClient{cc}
}

func (c *bunkerGameServiceClient) RevealPlayerCharacteristic(ctx context.Context, in *RevealPlayerCharacteristicRequest, opts ...grpc.CallOption) (*RevealPlayerCharacteristicResponse, error) {
	out := new(RevealPlayerCharacteristicResponse)
	err := c.cc.Invoke(ctx, BunkerGameService_RevealPlayerCharacteristic_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BunkerGameServiceServer is the server API for BunkerGameService service.
// All implementations must embed UnimplementedBunkerGameServiceServer
// for forward compatibility
type BunkerGameServiceServer interface {
	RevealPlayerCharacteristic(context.Context, *RevealPlayerCharacteristicRequest) (*RevealPlayerCharacteristicResponse, error)
	mustEmbedUnimplementedBunkerGameServiceServer()
}

// UnimplementedBunkerGameServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBunkerGameServiceServer struct {
}

func (UnimplementedBunkerGameServiceServer) RevealPlayerCharacteristic(context.Context, *RevealPlayerCharacteristicRequest) (*RevealPlayerCharacteristicResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevealPlayerCharacteristic not implemented")
}
func (UnimplementedBunkerGameServiceServer) mustEmbedUnimplementedBunkerGameServiceServer() {}

// UnsafeBunkerGameServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BunkerGameServiceServer will
// result in compilation errors.
type UnsafeBunkerGameServiceServer interface {
	mustEmbedUnimplementedBunkerGameServiceServer()
}

func RegisterBunkerGameServiceServer(s grpc.ServiceRegistrar, srv BunkerGameServiceServer) {
	s.RegisterService(&BunkerGameService_ServiceDesc, srv)
}

func _BunkerGameService_RevealPlayerCharacteristic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevealPlayerCharacteristicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BunkerGameServiceServer).RevealPlayerCharacteristic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BunkerGameService_RevealPlayerCharacteristic_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BunkerGameServiceServer).RevealPlayerCharacteristic(ctx, req.(*RevealPlayerCharacteristicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BunkerGameService_ServiceDesc is the grpc.ServiceDesc for BunkerGameService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BunkerGameService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "BunkerGameService",
	HandlerType: (*BunkerGameServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RevealPlayerCharacteristic",
			Handler:    _BunkerGameService_RevealPlayerCharacteristic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/bunker.proto",
}
